{"version":3,"sources":["containers/StripePayment/CardSection.js","containers/StripePayment/CheckoutForm.js","containers/StripePayment/Stripe.js","containers/Order/Order.js"],"names":["CardSection","react_default","a","createElement","react_stripe_elements_es","style","base","fontSize","React","Component","CheckoutForm","state","adding","added","disabled","handleSubmit","ev","preventDefault","_this","setState","props","stripe","createToken","name","then","_ref","token","console","log","billingId","data","billing_profile","stripe_id","id","axios","post","res","catch","error","response","onSubmit","this","className","StripePayment_CardSection","Button","btnType","Fragment","icon","type","theme","twoToneColor","injectStripe","MyStoreCheckout","StripePayment_CheckoutForm","Order","controls","address","elementType","elementConfig","placeholder","label","hint","value","validation","required","isUsername","valid","touched","country","options","displayValue","email","isEmail","controls1","firstName","lastName","city","zipCode","loading","billingData","card","editable","cardChange","purchasing","links","inputChangedHandler","event","controlName","updateControls","Object","objectSpread","defineProperty","target","checkValidity","inputChangedHandler1","onBillingSubmit","full_name","zipcode","user","userId","put","concat","err","onUpdateBilling","object","callback","key","success","projects","Modal","title","content","map","el","onOk","onCheckToCart","history","replace","orderhandler","singleProject","billingAddress","orderTotal","location","totalPrice","cart_id","cart","status","project","_this2","get","_this3","_this4","TabPane","Tabs","fomElementArray","push","config","form","formElemet","Input","invalid","shouldValidate","changed","list","obj","price","formData","paymentTabs","clicked","toUpperCase","Stripe","brand","last4","tabs","onChange","tab","scope","withRouter","connect","authReducer","dispatch","softwareId","actions"],"mappings":"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","file":"static/js/19.551fd3ed.chunk.js","sourcesContent":["// CardSection.js\r\nimport React from 'react';\r\nimport {CardElement} from 'react-stripe-elements';\r\n\r\nclass CardSection extends React.Component {\r\n  render() {\r\n    return (\r\n      <label>\r\n        <CardElement style={{base: {fontSize: '18px'}}} />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;","// CheckoutForm.js\r\nimport React from 'react';\r\nimport { Icon } from 'antd';\r\nimport { injectStripe } from 'react-stripe-elements';\r\nimport Button from '../../components/UI/Button/Button';\r\n//import AddressSection from './AddressSection';\r\nimport CardSection from './CardSection';\r\nimport axios from 'axios';\r\n\r\nclass CheckoutForm extends React.Component {\r\n\r\n  state = {\r\n    adding: false,\r\n    added: false,\r\n    disabled: false\r\n  }\r\n\r\n  handleSubmit = (ev) => {\r\n    // We don't want to let default form submission happen here, which would refresh the page.\r\n    ev.preventDefault();\r\n    this.setState({ adding: true });\r\n\r\n    // Within the context of `Elements`, this call to createToken knows which Element to\r\n    // tokenize, since there's only one in this group.\r\n    this.props.stripe.createToken({ name: 'Jenny Rosen' }).then(({ token }) => {\r\n      console.log('Received Stripe token:', token);\r\n      console.log('user id ' + this.props.billingId);\r\n      const data = {\r\n        billing_profile: this.props.billingId,\r\n        stripe_id: token.id,\r\n\r\n      }\r\n      axios.post('http://127.0.0.1:8000/api/payment/', data)\r\n        .then(res => {\r\n          console.log(res.data);\r\n          this.setState({ adding: false, added: true, disabled: true });\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response);\r\n        })\r\n\r\n    });\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        {/* <AddressSection /> */}\r\n        <div className='row pl-5 '>\r\n          <div className='col-md-8'><CardSection /></div>\r\n          <div className='col-md-4 pt-1'>\r\n            {this.state.adding ?\r\n              <Button btnType=\"Btn-primary btn-lg Btn-disable\" >Adding...</Button>\r\n              :\r\n              <Button\r\n                btnType={this.state.added ? \"Btn-primary btn-lg Btn-disable\" : \"Btn-primary btn-lg\"}\r\n                disabled={this.state.disabled} >\r\n                {this.state.added ?\r\n                  <>\r\n                    <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\r\n                    <span className='text-success'> Done</span>\r\n                  </> : 'Add'} </Button>\r\n            }\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectStripe(CheckoutForm);","import React from 'react';\r\nimport { Elements } from 'react-stripe-elements';\r\n\r\nimport InjectedCheckoutForm from './CheckoutForm';\r\n\r\nclass MyStoreCheckout extends React.Component {\r\n  render() {\r\n    return (\r\n      <Elements>\r\n        <InjectedCheckoutForm billingId={this.props.billingId} />\r\n      </Elements>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyStoreCheckout;","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { Modal } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport CustomButton from '../../components/UI/Button/Button';\r\nimport { checkValidity } from '../../shared/utility';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport * as actions from '../../store/actions/index';\r\nimport MyStoreCheckout from '../StripePayment/Stripe';\r\n\r\nclass Order extends Component {\r\n    state = {\r\n        controls: {\r\n            address: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter address '\r\n                },\r\n                label: 'Address:',\r\n                hint: 'Must contains address',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isUsername: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'pakistan', displayValue: 'Pakistan' },\r\n                        { value: 'saudia arab', displayValue: 'Saudia Arab' }\r\n\r\n                    ],\r\n                    placeholder: 'Country:'\r\n                },\r\n                label: 'Country:',\r\n                value: 'pakistan',\r\n                validation: {},\r\n                valid: true\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Enter your email'\r\n                },\r\n                label: 'Email:',\r\n                value: '',\r\n                hint: 'Email Must contains @ and valid Domain',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n        },\r\n\r\n        controls1: {\r\n            firstName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter your first name '\r\n                },\r\n                label: 'First Name:',\r\n                hint: 'Must contains letters',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isUsername: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            lastName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter your last name '\r\n                },\r\n                label: 'Last Name:',\r\n                hint: 'Must contains letters',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isUsername: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            city: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter city',\r\n                },\r\n                label: 'City:',\r\n                hint: 'Must contains City Name',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isUsername: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            state: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter state',\r\n                },\r\n                label: 'State:',\r\n                hint: 'Must contains state Name',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isUsername: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'number',\r\n                    placeholder: '123',\r\n                },\r\n                label: 'ZipCode:',\r\n                hint: 'Must contains ZipCode',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isUsername: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        loading: false,\r\n        error: null,\r\n        billingData: null,\r\n        card: null,\r\n        editable: false,\r\n        cardChange: false,\r\n        purchasing: false,\r\n        links: []\r\n\r\n    };\r\n    componentWillMount() {\r\n        // this.props.onBillingProfile(this.props.userId);\r\n        axios.get(`http://127.0.0.1:8000/api/billing/${this.props.userId}/`)\r\n            .then(res => {\r\n                this.setState({ billingData: res.data });\r\n                axios.get(`http://127.0.0.1:8000/api/payment/${this.state.billingData.id}`)\r\n                    .then(res => {\r\n                        this.setState({ card: res.data });\r\n                        console.log(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        this.setState({ error: err.response });\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                this.setState({ error: err.response });\r\n            })\r\n\r\n\r\n\r\n    }\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updateControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({ controls: updateControls });\r\n    }\r\n    inputChangedHandler1 = (event, controlName) => {\r\n        const updateControls = {\r\n            ...this.state.controls1,\r\n            [controlName]: {\r\n                ...this.state.controls1[controlName],\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.controls1[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({ controls1: updateControls });\r\n    }\r\n    onBillingSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        if (this.state.editable) {\r\n            const name = this.state.controls1.firstName.value + \" \" + this.state.controls1.lastName.value;\r\n            const data = {\r\n                full_name: name,\r\n                address: this.state.controls.address.value,\r\n                city: this.state.controls1.city.value,\r\n                country: this.state.controls.country.value,\r\n                zipcode: this.state.controls1.zipCode.value,\r\n                user: this.props.userId,\r\n                email: this.state.controls.email.value\r\n\r\n            }\r\n            axios.put(`http://127.0.0.1:8000/api/billing/${this.props.userId}/`, data)\r\n                .then(res => {\r\n                    this.setState({ loading: false, editable: false });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.setState({ error: err.data });\r\n                })\r\n        }\r\n        else {\r\n            const name = this.state.controls1.firstName.value + \" \" + this.state.controls1.lastName.value;\r\n            const data = {\r\n                full_name: name,\r\n                address: this.state.controls.address.value,\r\n                city: this.state.controls1.city.value,\r\n                country: this.state.controls.country.value,\r\n                zipcode: this.state.controls1.zipCode.value,\r\n                user: this.props.userId,\r\n                email: this.state.controls.email.value\r\n\r\n            }\r\n            axios.post('http://127.0.0.1:8000/api/billing/', data)\r\n                .then(res => {\r\n                    this.setState({ loading: false, editable: false, billingData: res.data });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.setState({ error: err.data });\r\n                });\r\n        }\r\n    }\r\n    onUpdateBilling = (object) => {\r\n        if (object == 'billing') {\r\n            const data = {\r\n                ...this.state.billingData\r\n            }\r\n            this.setState({\r\n                editable: true, firstName: data.full_name, lastName: data.full_name,\r\n                country: data.country, city: data.city, zipCode: data.zipcode\r\n            });\r\n        }\r\n        if (object == 'card') {\r\n            this.setState({ cardChange: true });\r\n        }\r\n\r\n    }\r\n\r\n    callback = (key) => {\r\n        console.log(key);\r\n    }\r\n\r\n    success = (projects) => {\r\n        Modal.success({\r\n            title: 'Payment Verified',\r\n            content: (\r\n                <div>\r\n                    <p>Congratulations your payment has been verified</p>\r\n                    <p>Click OK to go into your library</p>\r\n                    <ul>\r\n                        {projects.map(el => (\r\n                            <li key={el.id}>{el.title}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ),\r\n            onOk: () => {\r\n                this.props.onCheckToCart(this.props.userId, 0);\r\n                this.props.history.replace('/library');\r\n            }\r\n        });\r\n    }\r\n\r\n    error() {\r\n        Modal.error({\r\n            title: 'Verification failed',\r\n            content: 'We could not make this purchase, try again later!',\r\n\r\n            onOk: () => {\r\n                this.setState({ purchasing: false })\r\n            }\r\n        });\r\n    }\r\n\r\n    orderhandler = () => {\r\n        this.setState({ purchasing: true });\r\n\r\n        let data = {\r\n            user: this.state.billingData.user,\r\n            singleProject: 0,\r\n            billingAddress: this.state.billingData.id,\r\n            orderTotal: this.props.location.state.totalPrice\r\n        }\r\n        if (this.props.location.state.cart_id == 0) {\r\n            data = {\r\n                user: this.state.billingData.user,\r\n                singleProject: this.props.location.state.cart[0].id,\r\n                billingAddress: this.state.billingData.id,\r\n                orderTotal: this.props.location.state.totalPrice\r\n            }\r\n        }\r\n        axios.post('http://127.0.0.1:8000/api/order/', data)\r\n            .then(res => {\r\n\r\n                if (res.data.status === \"success\") {\r\n                    const projects = res.data.project;\r\n                    this.success(projects);\r\n                }\r\n                else {\r\n                    this.error();\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    render() {\r\n        const TabPane = Tabs.TabPane;\r\n        const fomElementArray = [];\r\n        for (let key in this.state.controls) {\r\n            fomElementArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n        let form = fomElementArray.map(formElemet => (\r\n            <Input elementType={formElemet.config.elementType}\r\n                elementConfig={formElemet.config.elementConfig}\r\n                value={formElemet.config.value}\r\n                key={formElemet.id}\r\n                invalid={!formElemet.config.valid}\r\n                shouldValidate={formElemet.config.validation}\r\n                touched={formElemet.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElemet.id)}\r\n                hint={formElemet.config.hint}\r\n                label={formElemet.config.label} />\r\n        ));\r\n        const list = this.props.location.state.cart.map(obj => {\r\n            return (\r\n                <tr key={obj.id}>\r\n                    <td>{obj.title}</td>\r\n                    <td>${obj.price}</td>\r\n                </tr>\r\n            )\r\n        });\r\n        let formData = (<div className=\"form__Login\">\r\n            <h2 className=\" font-weight-bold  \">Billing Details</h2>\r\n            <h5>We do not sell your details or share them without your permission. Read more in our privacy policy</h5>\r\n            <hr />\r\n            <form onSubmit={(event) => this.onBillingSubmit(event)}>\r\n                <div className=\"row Custom_margin\">\r\n                    <div className=\"col\">\r\n                        <Input elementType={this.state.controls1.firstName.elementType}\r\n                            elementConfig={this.state.controls1.firstName.elementConfig}\r\n                            value={this.state.controls1.firstName.value}\r\n                            key={this.state.controls1.firstName.label}\r\n                            invalid={!this.state.controls1.firstName.valid}\r\n                            shouldValidate={this.state.controls1.firstName.validation}\r\n                            touched={this.state.controls1.firstName.touched}\r\n                            changed={(event) => this.inputChangedHandler1(event, 'firstName')}\r\n                            hint={this.state.controls1.firstName.hint}\r\n                            label={this.state.controls1.firstName.label} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Input elementType={this.state.controls1.lastName.elementType}\r\n                            elementConfig={this.state.controls1.lastName.elementConfig}\r\n                            value={this.state.controls1.lastName.value}\r\n                            key={this.state.controls1.lastName.label}\r\n                            invalid={!this.state.controls1.lastName.valid}\r\n                            shouldValidate={this.state.controls1.lastName.validation}\r\n                            touched={this.state.controls1.lastName.touched}\r\n                            changed={(event) => this.inputChangedHandler1(event, 'lastName')}\r\n                            hint={this.state.controls1.lastName.hint}\r\n                            label={this.state.controls1.lastName.label} />\r\n                    </div>\r\n                </div>\r\n                {form}\r\n                <div className=\"row Custom_margin\">\r\n                    <div className=\"col\">\r\n                        <Input elementType={this.state.controls1.city.elementType}\r\n                            elementConfig={this.state.controls1.city.elementConfig}\r\n                            value={this.state.controls1.city.value}\r\n                            key={this.state.controls1.city.label}\r\n                            invalid={!this.state.controls1.city.valid}\r\n                            shouldValidate={this.state.controls1.city.validation}\r\n                            touched={this.state.controls1.city.touched}\r\n                            changed={(event) => this.inputChangedHandler1(event, 'city')}\r\n                            hint={this.state.controls1.city.hint}\r\n                            label={this.state.controls1.city.label} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Input elementType={this.state.controls1.state.elementType}\r\n                            elementConfig={this.state.controls1.state.elementConfig}\r\n                            value={this.state.controls1.state.value}\r\n                            key={this.state.controls1.state.label}\r\n                            invalid={!this.state.controls1.state.valid}\r\n                            shouldValidate={this.state.controls1.state.validation}\r\n                            touched={this.state.controls1.state.touched}\r\n                            changed={(event) => this.inputChangedHandler1(event, 'state')}\r\n                            hint={this.state.controls1.state.hint}\r\n                            label={this.state.controls1.state.label} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Input elementType={this.state.controls1.zipCode.elementType}\r\n                            elementConfig={this.state.controls1.zipCode.elementConfig}\r\n                            value={this.state.controls1.zipCode.value}\r\n                            key={this.state.controls1.zipCode.label}\r\n                            invalid={!this.state.controls1.zipCode.valid}\r\n                            shouldValidate={this.state.controls1.zipCode.validation}\r\n                            touched={this.state.controls1.zipCode.touched}\r\n                            changed={(event) => this.inputChangedHandler1(event, 'zipCode')}\r\n                            hint={this.state.controls1.zipCode.hint}\r\n                            label={this.state.controls1.zipCode.label} />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <CustomButton btnType=\"Btn-primary Btn-lg ml-4\" disabled={this.state.loading ? true : false} >\r\n                            {this.state.loading ? 'Saving...' : 'Save and Continue'}\r\n                        </CustomButton>\r\n                    </div>\r\n                </div>\r\n            </form></div>);\r\n        let paymentTabs = null;\r\n        if (this.state.billingData && !this.state.editable) {\r\n            formData = (\r\n                <div className='border p-4 bg-light' >\r\n                    <div className='clearfix'>\r\n                        <h2 className=\" font-weight-bold  float-left\">Billing Details</h2>\r\n                        <CustomButton btnType=\"btn float-right btn-outline-secondary btn-lg\" clicked={() => this.onUpdateBilling('billing')}>edit</CustomButton>\r\n                    </div>\r\n\r\n                    <div className=\"\">\r\n                        <h4>{this.state.billingData.full_name.toUpperCase()}</h4>\r\n                        <h4>{this.state.billingData.country.toUpperCase()}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n            let card = <MyStoreCheckout billingId={this.state.billingData.id} />;\r\n            if (this.state.card && !this.state.cardChange) {\r\n                card = (\r\n                    <div className='border p-4 bg-light' >\r\n                        <div className='clearfix'>\r\n                            <h2 className=\" font-weight-bold  float-left\">Card Details</h2>\r\n                            <CustomButton btnType=\"btn float-right btn-outline-secondary btn-lg\" clicked={() => this.onUpdateBilling('card')}>edit</CustomButton>\r\n                        </div>\r\n\r\n                        <div className=\"\">\r\n                            <h4>{this.state.card.brand}</h4>\r\n                            <h4>{this.state.card.country}</h4>\r\n                            <h4>************{this.state.card.last4}</h4>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            paymentTabs = (\r\n                <Tabs onChange={this.callback} type=\"card\">\r\n                    <TabPane tab=\"Stripe\" key=\"1\">\r\n                        {card}\r\n                    </TabPane>\r\n                    <TabPane tab=\"To Checkout\" key=\"2\">\r\n                    </TabPane>\r\n                    <TabPane tab=\"Tab 3\" key=\"3\"></TabPane>\r\n                </Tabs>\r\n\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        {formData}\r\n                        <br />\r\n                        <div className='border'>\r\n                            <h2 className='pt-3 pl-3'>Select Payment Method</h2>\r\n                            <hr />\r\n                            {paymentTabs}\r\n                            <div className=' form__Login no_shadow'>\r\n                                <div className=\"clearfix\">\r\n                                    <h2 className=\"float-left  btn-link\">Your Order</h2>\r\n                                    <h3 className=\"float-right\"><b>{this.props.location.state.totalPrice}</b></h3>\r\n                                </div>\r\n                                <hr />\r\n                                <div className='row'>\r\n                                    <div className='col-8'>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4 clearfix\">\r\n                                        <div className='float-left'>\r\n                                            <h3>Total:</h3>\r\n                                        </div>\r\n                                        <div className=\"float-right\">\r\n                                            <b>${this.props.location.state.totalPrice}</b>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div className='row'>\r\n                                    <div className='col-8'></div>\r\n                                    <div className='col-4 clearfix'>\r\n                                        <div className=\"float-right\">\r\n                                            {this.state.purchasing ?\r\n                                                <CustomButton\r\n                                                    btnType=\"Btn-primary btn-lg Btn-disable\"\r\n                                                    clicked={this.orderhandler} >Verifying...</CustomButton>\r\n                                                :\r\n                                                <CustomButton\r\n                                                    btnType=\"Btn-primary btn-lg \"\r\n                                                    clicked={this.orderhandler} >Make Payment</CustomButton>\r\n                                            }\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 \">\r\n                        <div className=\"table-responsive-md border\">\r\n                            <table className=\"table table-light\">\r\n                                <thead className=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"row\">Order Summary</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {list}\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th><b>Total</b></th>\r\n                                        <th><b>${this.props.location.state.totalPrice}</b></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.authReducer.userId,\r\n        token: state.authReducer.token\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCheckToCart: (userId, softwareId) => dispatch(actions.checkToCart(userId, softwareId))\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Order));\r\n"],"sourceRoot":""}