{"version":3,"sources":["components/UI/DynamicFormItem/DynamicFormItem.js","components/UI/ImagesUpload/ImagesUpload.js","components/UI/TagGroup/TagGroup.js","components/UI/Popover/Popover.js","containers/PostProject/PostProject.js"],"names":["ListItem","_ref","value","onClick","react_default","a","createElement","List","_ref2","items","onItemClick","map","item","i","DynamicFormItem_ListItem","key","DynamicFieldSet","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","type","_this$state","state","inputValue","fruites","nextState","concat","toConsumableArray","setState","addModule","addTechnology","addRequirement","onChange","e","target","handleItemClick","console","log","innerHTML","_this2","_this$state2","Fragment","className","placeholder","aria-label","aria-describedby","btnLabel","id","DynamicFormItem_List","React","Component","connect","dispatch","index","actions","removeModule","removeTechnology","removeRequirement","ImagesUpload","setSnapshotProps","addSnapshot","pictures","onDrop","picture","name","setTimeout","bind","assertThisInitialized","compiled_default","label","withPreview","withIcon","buttonText","imgExtension","maxFileSize","fileList","TagGroup","tags","inputVisible","handleClose","removedTag","filter","tag","showInput","input","focus","handleInputChange","handleInputConfirm","indexOf","addTag","saveInputRef","isLongTag","length","tagElem","es_tag","closable","afterClose","slice","tooltip","title","ref","size","style","width","onBlur","onPressEnter","background","borderStyle","icon","popover","es_popover","placement","content","trigger","children","message","config","top","duration","maxCount","Option","Select","PostProject","controls","elementType","elementConfig","price","description","link","category","uploaded","error","loading","visible","percent","user","image","DevelperDumyProfilePic","imageUrl","modules","technologies","requirements","pricing","serviceFee","showModal","_loop","validateForm","validator","isHalfWidth","snapshots","isFloat","min","max","inputChangedHandler","event","controlName","updateControls","objectSpread","defineProperty","onImageChange","files","URL","createObjectURL","submitHandler","preventDefault","el","obj","project","push","formData","toFixed","axios","post","then","response","data","sendImage","catch","FormData","append","status","delete","sendVideo","video","sendFile","file","localStorage","getItem","history","_this3","fomElementArray","SecondaryHeading","TertiaryHeading","rows","htmlFor","DynamicFormItem","UI_ImagesUpload_ImagesUpload","FileUpload","textAlign","Popover","cursor","es_select","showSearch","optionFilterProp","handleChange","filterOption","option","toLowerCase","Input","changed","UI_TagGroup_TagGroup","src","alt","onSubmit","Button","btnType","modal","centered","footer","progress","dynamicFormItemReducer","tagReducer","snapShotsReducer","videoReducer","fileReducer"],"mappings":"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","file":"static/js/20.a8d6063c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst ListItem = ({ value, onClick }) => (\r\n    <li onClick={onClick}>{value}</li>\r\n);\r\n\r\nconst List = ({ items, onItemClick }) => (\r\n    <ul>\r\n        {\r\n            items.map((item, i) => <ListItem key={i} value={item} onClick={onItemClick} />)\r\n        }\r\n    </ul>\r\n);\r\n\r\nclass DynamicFieldSet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: '',\r\n            fruites: []\r\n        };\r\n    }\r\n\r\n    onClick = (type) => {\r\n        const { inputValue, fruites } = this.state;\r\n        if (inputValue) {\r\n            const nextState = [...fruites, inputValue];\r\n            this.setState({ fruites: nextState, inputValue: '' });\r\n        }\r\n        switch (type) {\r\n            case 'Module':\r\n                this.props.addModule(inputValue)\r\n                break;\r\n            case 'Technology':\r\n                this.props.addTechnology(inputValue)\r\n                break;\r\n            case 'Requirement':\r\n                this.props.addRequirement(inputValue)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({ inputValue: e.target.value });\r\n\r\n    handleItemClick = (e) => { console.log(e.target.innerHTML) }\r\n\r\n    render() {\r\n        const { fruites, inputValue } = this.state;\r\n        return (\r\n            // <div>\r\n            //     <input type=\"text\" value={inputValue} onChange={this.onChange} />\r\n            //     <button onClick={() => this.onClick(this.props.btnLabel)}>Add</button>\r\n            //     <List items={fruites} onItemClick={this.handleItemClick} />\r\n            // </div>\r\n            <>\r\n                <div className=\"input-group input-group-md col-md-6  mb-1\" >\r\n                    <input type=\"text\" value={inputValue} onChange={this.onChange} className=\"form-control\" placeholder=\"Add...\" aria-label=\"Add...\" aria-describedby=\"add-button\" />\r\n                    <div className=\"input-group-append\">\r\n                        <button onClick={() => this.onClick(this.props.btnLabel)} className=\"Btn-primary btn\" type=\"button\" id=\"add-button\" ><i className=\"fas fa-plus\"></i></button>\r\n                    </div> <br />\r\n\r\n                </div>\r\n                <List items={fruites} onItemClick={this.handleItemClick} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let id = 0;\r\n\r\n// class DynamicFieldSet extends React.Component {\r\n\r\n//     state = {\r\n//         control: {\r\n//             value: ''\r\n//         }\r\n//     }\r\n\r\n//     remove = (k) => {\r\n//         const { form } = this.props;\r\n//         // can use data-binding to get\r\n//         const keys = form.getFieldValue('keys');\r\n//         // We need at least one passenger\r\n//         if (keys.length === 1) {\r\n//             return;\r\n//         }\r\n//         // can use data-binding to set\r\n//         form.setFieldsValue({\r\n//             keys: keys.filter(key => key !== k)\r\n//         });\r\n//         // this.props.removeModule(k);\r\n//         if (this.props.modules) {\r\n//             this.props.removeModule(k);\r\n//         }\r\n//         // else if (this.props.technologies) {\r\n//         //     this.props.removeTechnology(k);\r\n//         // }\r\n//         // else if (this.props.requirements) {\r\n//         //     this.props.removeRequirement(k);\r\n//         // }\r\n//     }\r\n\r\n//     add = () => {\r\n//         const { form } = this.props;\r\n//         // can use data-binding to get\r\n//         const keys = form.getFieldValue('keys');\r\n//         const nextKeys = keys.concat(id++);\r\n//         // can use data-binding to set\r\n//         // important! notify form to detect changes\r\n//         form.setFieldsValue({\r\n//             keys: nextKeys\r\n//         });\r\n\r\n\r\n//     }\r\n\r\n//     onChangeHandler = (event, index) => {\r\n//         console.log(this.props.form.getFieldValue('names'))\r\n//         if (this.props.modules) {\r\n\r\n//             const updatedControl = {\r\n//                 ...this.state.control,\r\n//                 value: event.target.value\r\n//             }\r\n//             this.setState({ control: updatedControl });\r\n//         }\r\n//     }\r\n\r\n//     sendValueHandler = (index) => {\r\n//         if (this.props.modules) {\r\n//             this.props.addModule(this.state.control.value, index);\r\n//         }\r\n//         // if (this.props.technologies) {\r\n//         //     this.props.addTechnology(this.state.control.value, index);\r\n//         // }\r\n//         // else if (this.props.requirements) {\r\n//         //     this.props.addRequirement(this.state.control.value, index);\r\n//         // }\r\n//     }\r\n\r\n//     handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         this.props.form.validateFields((err, values) => {\r\n//             if (!err) {\r\n//                 console.log('Received values of form: ', values);\r\n//             }\r\n//         });\r\n//     }\r\n\r\n//     render() {\r\n//         const { getFieldDecorator, getFieldValue } = this.props.form;\r\n//         const formItemLayout = {\r\n//             labelCol: {\r\n//                 xs: { span: 24 },\r\n//                 sm: { span: 4 },\r\n//             },\r\n//             wrapperCol: {\r\n//                 xs: { span: 24 },\r\n//                 sm: { span: 20 },\r\n//             },\r\n//         };\r\n//         const formItemLayoutWithOutLabel = {\r\n//             wrapperCol: {\r\n//                 xs: { span: 24, offset: 0 },\r\n//                 sm: { span: 20, offset: 4 },\r\n//             },\r\n//         };\r\n//         getFieldDecorator('keys', { initialValue: [] });\r\n//         const keys = getFieldValue('keys');\r\n//         const formItems = keys.map((k, index) => (\r\n//             <Form.Item\r\n//                 {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n//                 label={index === 0 ? '          ' : ''}\r\n//                 required={false}\r\n//                 key={k}\r\n//             >\r\n//                 {getFieldDecorator(`names[${k}]`, {\r\n//                     validateTrigger: ['onChange', 'onBlur'],\r\n//                     rules: [{\r\n//                         required: true,\r\n//                         whitespace: true,\r\n//                         message: \"Please enter atleast one field.\",\r\n//                     }],\r\n//                 })(\r\n//                     <Input placeholder=\"Name\"\r\n//                         style={{ width: '60%', marginRight: 8 }}\r\n//                         onChange={(event) => this.onChangeHandler(event, index)}\r\n//                         onBlur={() => this.sendValueHandler(index)} />\r\n//                 )}\r\n//                 {keys.length > 1 ? (\r\n//                     <Icon\r\n//                         className=\"dynamic-delete-button\"\r\n//                         type=\"minus-circle-o\"\r\n//                         disabled={keys.length === 1}\r\n//                         onClick={() => this.remove(k)}\r\n//                     />\r\n//                 ) : null}\r\n//             </Form.Item>\r\n//         ));\r\n//         return (\r\n//             <Form onSubmit={this.handleSubmit}>\r\n//                 {formItems}\r\n//                 <Form.Item {...formItemLayoutWithOutLabel}>\r\n//                     <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\r\n//                         <Icon type=\"plus\" /> Add <span className='ml-2'>{this.props.btnLabel}</span>\r\n//                     </Button>\r\n//                 </Form.Item>\r\n//             </Form>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// const WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // categories: state.dynamicFormItemReducer.modules,\r\n        // technologies: state.dynamicFormItemReducer.technologies,\r\n        // requirements: state.dynamicFormItemReducer.requirements\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addModule: (value, index) => dispatch(actions.addModule(value, index)),\r\n        removeModule: (index) => dispatch(actions.removeModule(index)),\r\n        addTechnology: (value, index) => dispatch(actions.addTechnology(value, index)),\r\n        removeTechnology: (index) => dispatch(actions.removeTechnology(index)),\r\n        addRequirement: (value, index) => dispatch(actions.addRequirement(value, index)),\r\n        removeRequirement: (index) => dispatch(actions.removeRequirement(index)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DynamicFieldSet);","import React from 'react';\r\nimport ImageUploader from 'react-images-upload';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ImagesUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pictures: [] };\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    setSnapshotProps = () => {\r\n\r\n        this.props.addSnapshot(this.state.pictures);\r\n    }\r\n\r\n    onDrop = (picture, name) => {\r\n        this.setState({\r\n            pictures: picture\r\n        })\r\n\r\n        setTimeout(this.setSnapshotProps, 1000);\r\n    }\r\n\r\n\r\n    // onDrop(picture) {\r\n\r\n    //     // console.log(pictures)\r\n    //     // this.setState({\r\n    //     //     pictures: this.state.pictures.concat(picture),\r\n    //     // });\r\n    //     // if (picture.length === 0) {\r\n    //     //     this.setState({\r\n    //     //         pictures: this.state.pictures.pop(),\r\n    //     //     });\r\n    //     // }\r\n    //     // console.log(picture.slice(-1)[0])\r\n    //     // if (picture.length > 0) {\r\n    //     //     console.log(picture[picture.length - 1])\r\n    //     // }\r\n    //     // this.setState({\r\n    //     //     pictures: this.state.pictures.concat(picture.slice(-1)[0]),\r\n    //     // });\r\n    //     // this.setState({\r\n    //     //     pictures\r\n    //     // });\r\n\r\n    //     setTimeout(this.setSnapshotProps, 2000);\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ImageUploader\r\n                label='Max file size: 2mb, accepted: jpg/png'\r\n                withPreview={true}\r\n                withIcon={true}\r\n                buttonText='Choose images'\r\n                onChange={this.onDrop}\r\n                imgExtension={['.jpg', '.png']}\r\n                maxFileSize={2242880}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addSnapshot: (fileList) => dispatch(actions.addFile(fileList))\r\n    };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ImagesUpload);","import React from 'react';\r\nimport { Tag, Input, Tooltip, Icon, } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass TagGroup extends React.Component {\r\n    state = {\r\n        tags: ['Specific tags'],\r\n        inputVisible: false,\r\n        inputValue: '',\r\n    };\r\n\r\n    handleClose = (removedTag) => {\r\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n        this.setState({ tags });\r\n    }\r\n\r\n    showInput = () => {\r\n        this.setState({ inputVisible: true }, () => this.input.focus());\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ inputValue: e.target.value });\r\n    }\r\n\r\n    handleInputConfirm = () => {\r\n        const state = this.state;\r\n        const inputValue = state.inputValue;\r\n        let tags = state.tags;\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n            tags = [...tags, inputValue];\r\n        }\r\n\r\n        this.setState({\r\n            tags,\r\n            inputVisible: false,\r\n            inputValue: '',\r\n        });\r\n        this.props.addTag(inputValue);\r\n    }\r\n\r\n    saveInputRef = input => this.input = input\r\n\r\n    render() {\r\n        const { tags, inputVisible, inputValue } = this.state;\r\n        return (\r\n            <div>\r\n                {tags.map((tag, index) => {\r\n                    const isLongTag = tag.length > 20;\r\n                    const tagElem = (\r\n                        <Tag key={tag} closable={index !== 0} afterClose={() => this.handleClose(tag)}>\r\n                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                        </Tag>\r\n                    );\r\n                    return isLongTag ? <Tooltip title={tag} key={tag}>{tagElem}</Tooltip> : tagElem;\r\n                })}\r\n                {inputVisible && (\r\n                    <Input\r\n                        ref={this.saveInputRef}\r\n                        type=\"text\"\r\n                        size=\"small\"\r\n                        style={{ width: 78 }}\r\n                        value={inputValue}\r\n                        onChange={this.handleInputChange}\r\n                        onBlur={this.handleInputConfirm}\r\n                        onPressEnter={this.handleInputConfirm}\r\n                    />\r\n                )}\r\n                {!inputVisible && (\r\n                    <Tag\r\n                        onClick={this.showInput}\r\n                        style={{ background: '#fff', borderStyle: 'dashed' }}\r\n                    >\r\n                        <Icon type=\"plus\" /> New Tag\r\n            </Tag>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTag: (value) => dispatch(actions.addTag(value))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TagGroup);","import React from 'react';\r\nimport { Popover, } from 'antd';\r\n\r\nconst popover = props => (\r\n    <Popover placement={props.placement} title={props.title} content={props.content} trigger=\"click\">\r\n        {props.children}\r\n    </Popover>\r\n)\r\n\r\nexport default popover;","import React, { Component } from \"react\";\r\n\r\nimport validator from \"validator\";\r\nimport axios from \"../../axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { Progress, Modal, message, Select } from \"antd\";\r\nimport SecondaryHeading from \"../../components/UI/Headings/SecondaryHeading\";\r\nimport TertiaryHeading from \"../../components/UI/Headings/TertiaryHeading\";\r\nimport DynamicFieldSet from \"../../components/UI/DynamicFormItem/DynamicFormItem\";\r\nimport FileUpload from \"../../components/UI/FileUpload/FileUpload\";\r\nimport ImagesUpload from \"../../components/UI/ImagesUpload/ImagesUpload\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport TagGroup from \"../../components/UI/TagGroup/TagGroup\";\r\nimport Popover from \"../../components/UI/Popover/Popover\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport DevelperDumyProfilePic from \"../../assets/img/ProfilePic/develperDumyProfilePic.png\";\r\n\r\nmessage.config({\r\n  top: 100,\r\n  duration: 2,\r\n  maxCount: 3\r\n});\r\n\r\nconst Option = Select.Option;\r\n\r\nclass PostProject extends Component {\r\n  state = {\r\n    controls: {\r\n      title: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Cafe Management System\"\r\n        },\r\n        value: \"\"\r\n      },\r\n      price: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"100\"\r\n        },\r\n        value: \"\"\r\n      },\r\n      description: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Description about your project\"\r\n        },\r\n        value: \"\"\r\n      },\r\n      link: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"\"\r\n        },\r\n        value: \"\"\r\n      },\r\n      category: {\r\n        value: \"\"\r\n      }\r\n    },\r\n    uploaded: false,\r\n    error: false,\r\n    loading: false,\r\n    visible: false,\r\n    percent: 0,\r\n    user: null,\r\n    id: null,\r\n    image: DevelperDumyProfilePic,\r\n    imageUrl: DevelperDumyProfilePic,\r\n    modules: [],\r\n    technologies: [],\r\n    requirements: [],\r\n    tags: [],\r\n    pricing: {\r\n      serviceFee: 0\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const user = localStorage.getItem(\"userId\");\r\n    this.setState({ user: user });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.uploaded) {\r\n      console.log(\"uploaded\");\r\n      setTimeout(() => {\r\n        this.props.history.push(\"/profile\");\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  handleChange(value, controlName) {\r\n    const updateControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: value\r\n      }\r\n    };\r\n\r\n    this.setState({ controls: updateControls });\r\n  }\r\n\r\n  showModal = () => {\r\n    for (let i = 1; i <= 100; i++) {\r\n      setTimeout(() => {\r\n        if (i === 100) {\r\n          this.setState({ percent: i });\r\n        }\r\n        this.setState({ percent: i });\r\n      }, 2000);\r\n    }\r\n\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  validateForm = () => {\r\n    if (!validator.isHalfWidth(this.state.controls.title.value)) {\r\n      message.error(\"Name field contains only letters and numbers\");\r\n      return false;\r\n    }\r\n\r\n    if (!validator.isHalfWidth(this.state.controls.description.value)) {\r\n      message.error(\"Description field contains only letters and numbers\");\r\n      return false;\r\n    }\r\n\r\n    if (this.props.snapshots.length !== 4) {\r\n      message.error(\"4 snapshot images are required\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !validator.isFloat(this.state.controls.price.value, {\r\n        min: 9.99,\r\n        max: 4999.99\r\n      })\r\n    ) {\r\n      message.error(\"Specify price between 9.99 - 4999.99\");\r\n      return false;\r\n    }\r\n\r\n    if (this.state.controls.link.value == \"\") {\r\n      message.error(\"Please provide link of source files\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updateControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value\r\n      }\r\n    };\r\n    this.setState({\r\n      controls: updateControls,\r\n      pricing: {\r\n        serviceFee: (5 / 100) * updateControls.price.value\r\n      }\r\n    });\r\n  };\r\n\r\n  onImageChange = event => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.setState({\r\n        imageUrl: URL.createObjectURL(event.target.files[0]),\r\n        image: event.target.files[0]\r\n      });\r\n    }\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n\r\n    if (this.validateForm() === false) {\r\n      return;\r\n    }\r\n\r\n    this.showModal();\r\n\r\n    //Get data from state\r\n    for (let el = 0; el < this.props.modules.length; el++) {\r\n      const obj = {\r\n        project: this.state.controls.title.value,\r\n        name: this.props.modules[el]\r\n      };\r\n      this.setState({\r\n        modules: this.state.modules.push(obj)\r\n      });\r\n    }\r\n    for (let el = 0; el < this.props.technologies.length; el++) {\r\n      const obj = {\r\n        project: this.state.controls.title.value,\r\n        name: this.props.technologies[el]\r\n      };\r\n      this.setState({\r\n        technologies: this.state.technologies.push(obj)\r\n      });\r\n    }\r\n    for (let el = 0; el < this.props.requirements.length; el++) {\r\n      const obj = {\r\n        project: this.state.controls.title.value,\r\n        name: this.props.requirements[el]\r\n      };\r\n      this.setState({\r\n        requirements: this.state.requirements.push(obj)\r\n      });\r\n    }\r\n    for (let el = 0; el < this.props.tags.length; el++) {\r\n      const obj = {\r\n        project: this.state.controls.title.value,\r\n        title: this.props.tags[el]\r\n      };\r\n      this.setState({\r\n        tags: this.state.tags.push(obj)\r\n      });\r\n    }\r\n    const formData = {};\r\n    for (let el in this.state.controls) {\r\n      formData[el] = this.state.controls[el].value;\r\n      formData[\"user\"] = this.state.user;\r\n      formData[\"modules\"] = this.state.modules;\r\n      formData[\"technologies\"] = this.state.technologies;\r\n      formData[\"requirements\"] = this.state.requirements;\r\n      formData[\"tags\"] = this.state.tags;\r\n      formData[\"service_fees\"] = this.state.pricing.serviceFee.toFixed(2);\r\n    }\r\n\r\n    axios\r\n      .post(\"/projects/\", formData)\r\n      .then(response => {\r\n        this.setState({ id: response.data.id });\r\n        setTimeout(this.sendImage, 1000);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  sendImage = () => {\r\n    const data = new FormData();\r\n    data.append(\"project\", this.state.id);\r\n    data.append(\"image\", this.state.image);\r\n    axios\r\n      .post(`/projects/${this.state.id}/upload-thumbnail/`, data)\r\n      .then(response => {\r\n        if (response.status === 201) {\r\n          data.delete(\"image\");\r\n          let files = this.props.snapshots;\r\n          data.append(\"image\", files[0]);\r\n          axios\r\n            .post(`/projects/${this.state.id}/upload-snapshot/`, data)\r\n            .then(response => {\r\n              if (response.status === 201) {\r\n                data.delete(\"image\");\r\n                data.append(\"image\", files[1]);\r\n                axios\r\n                  .post(`/projects/${this.state.id}/upload-snapshot/`, data)\r\n                  .then(response => {\r\n                    if (response.status === 201) {\r\n                      data.delete(\"image\");\r\n                      data.append(\"image\", files[2]);\r\n                      axios\r\n                        .post(\r\n                          `/projects/${this.state.id}/upload-snapshot/`,\r\n                          data\r\n                        )\r\n                        .then(response => {\r\n                          if (response.status === 201) {\r\n                            data.delete(\"image\");\r\n                            data.append(\"image\", files[3]);\r\n                            axios\r\n                              .post(\r\n                                `/projects/${this.state.id}/upload-snapshot/`,\r\n                                data\r\n                              )\r\n                              .then(response => {\r\n                                if (response.status === 201) {\r\n                                  data.delete(\"project\");\r\n                                  data.delete(\"image\");\r\n                                  console.log(\"executing send video function\");\r\n                                  this.sendVideo();\r\n                                }\r\n                              })\r\n                              .catch(error => {\r\n                                console.log(error);\r\n                              });\r\n                          }\r\n                        });\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n\r\n          // files.map(file => {\r\n          //     if (data.has('image')) {\r\n          //         console.log(data.get('image'));\r\n          //         data.delete('image');\r\n          //     }\r\n          //     data.append('image', file);\r\n          //     console.log(data.get('image'));\r\n          //     axios.post(`http://127.0.0.1:8000/api/projects/${this.state.id}/upload-snapshot/`, data)\r\n          //         .then(response => {\r\n          //             console.log(response.data);\r\n          //         })\r\n          // })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  sendVideo = () => {\r\n    console.log(\"sendVideo\");\r\n    const data = new FormData();\r\n    data.append(\"project\", this.state.id);\r\n    data.append(\"video\", this.props.video);\r\n    axios\r\n      .post(`/projects/${this.state.id}/upload-video/`, data)\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.status === 201) {\r\n          console.log(response.data);\r\n          this.sendFile();\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  sendFile = () => {\r\n    const data = new FormData();\r\n    data.append(\"project\", this.state.id);\r\n    data.append(\"file\", this.props.file);\r\n    axios\r\n      .post(`/projects/${this.state.id}/upload-file/`, data)\r\n      .then(response => {\r\n        if (response.status === 201) {\r\n          // Clear props\r\n          this.props.modules.length = 0;\r\n          this.props.technologies.length = 0;\r\n          this.props.requirements.length = 0;\r\n          this.setState({ uploaded: true });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const fomElementArray = [];\r\n    for (let key in this.state.controls) {\r\n      fomElementArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n\r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 col-md-offset-2 \">\r\n              <SecondaryHeading>Upload your project</SecondaryHeading>\r\n              <br />\r\n              <div className=\"border bg-white d-inline-block px-4 py-2 mb-5\">\r\n                <TertiaryHeading>\r\n                  Before you upload, make sure to read our terms.\r\n                </TertiaryHeading>\r\n                <ul>\r\n                  <li>\r\n                    Read the standards and requirements for item(s) you want to\r\n                    sell.\r\n                  </li>\r\n                  <li>Make sure your files are well organized.</li>\r\n                  <li>Always provide complete details about your project.</li>\r\n                </ul>\r\n              </div>\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <TertiaryHeading>Name and Description</TertiaryHeading>\r\n                  <br />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"title\"\r\n                    placeholder=\"Name\"\r\n                    onChange={event => this.inputChangedHandler(event, \"title\")}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    rows=\"8\"\r\n                    className=\"form-control\"\r\n                    name=\"description\"\r\n                    placeholder=\"Write overview of your project...\"\r\n                    onChange={event =>\r\n                      this.inputChangedHandler(event, \"description\")\r\n                    }\r\n                  />\r\n                </div>\r\n              </form>\r\n              <hr />\r\n              <div className=\"mt-5\">\r\n                <TertiaryHeading>Features and Requirements</TertiaryHeading>\r\n                <br />\r\n                <div className=\"\">\r\n                  <label htmlFor=\"description\">Modules</label>\r\n                  <DynamicFieldSet btnLabel=\"Module\" />\r\n                </div>\r\n                <div className=\"\">\r\n                  <label htmlFor=\"description\">Technologies</label>\r\n                  <DynamicFieldSet btnLabel=\"Technology\" />\r\n                </div>\r\n                <div className=\"\">\r\n                  <label htmlFor=\"description\">Requirements</label>\r\n                  <DynamicFieldSet btnLabel=\"Requirement\" />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n\r\n              <div className=\"mt-5\">\r\n                <TertiaryHeading>Choose Snapshots</TertiaryHeading>\r\n                <br />\r\n                <ImagesUpload />\r\n              </div>\r\n              <hr />\r\n\r\n              <div className=\"mt-5\">\r\n                <TertiaryHeading>Upload Video</TertiaryHeading>\r\n                <br />\r\n                <FileUpload video />\r\n              </div>\r\n              <hr />\r\n\r\n              <div className=\"mt-5\">\r\n                <TertiaryHeading>Pricing</TertiaryHeading>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <p>Total amount the customers will see on your project</p>\r\n                  </div>\r\n                  <div className=\"col-4 ml-auto\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control \"\r\n                      style={{ textAlign: \"right\" }}\r\n                      name=\"price\"\r\n                      placeholder=\"$150.00\"\r\n                      onChange={event =>\r\n                        this.inputChangedHandler(event, \"price\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <p>\r\n                      SoftForest service fee\r\n                      <Popover\r\n                        placement=\"right\"\r\n                        title={<strong> SoftForest service fee</strong>}\r\n                        content={\r\n                          <div>\r\n                            <p>\r\n                              SoftForest takes 5% of your price as per service\r\n                              charges.\r\n                            </p>\r\n                          </div>\r\n                        }\r\n                      >\r\n                        <strong style={{ cursor: \"pointer\" }}>\r\n                          &nbsp;&nbsp;Explain\r\n                        </strong>\r\n                      </Popover>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-4 ml-auto text-right\">\r\n                    <p>\r\n                      ${this.state.pricing.serviceFee.toFixed(2)}&nbsp;&nbsp;\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <p>Amount you will recieve after service fees</p>\r\n                  </div>\r\n                  <div className=\"col-4 ml-auto text-right\">\r\n                    <p>\r\n                      $\r\n                      {(\r\n                        this.state.controls.price.value -\r\n                        this.state.pricing.serviceFee\r\n                      ).toFixed(2)}\r\n                      &nbsp;&nbsp;\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"mt-5\">\r\n                <TertiaryHeading>Category</TertiaryHeading>\r\n                <div className=\"col-5 mt-5\">\r\n                  <Select\r\n                    showSearch\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"Select a category\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={value => this.handleChange(value, \"category\")}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    <Option value=\"Desktop\">Desktop</Option>\r\n                    <Option value=\"Mobile\">Mobile</Option>\r\n                    <Option value=\"Web\">Web</Option>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"mt-5\">\r\n                <TertiaryHeading>Demo</TertiaryHeading>\r\n                <br />\r\n                <p>\r\n                  {\" \"}\r\n                  You can add demo of your project or skip this\r\n                  <Popover\r\n                    placement=\"right\"\r\n                    title={<strong>Demo files</strong>}\r\n                    content={\r\n                      <div>\r\n                        <p>\r\n                          Upload your files/setup to any cloud based file\r\n                          hosting <br /> service and paste link here.\r\n                        </p>\r\n                      </div>\r\n                    }\r\n                  >\r\n                    <strong style={{ cursor: \"pointer\" }}>\r\n                      &nbsp;&nbsp;Explain\r\n                    </strong>\r\n                  </Popover>\r\n                </p>\r\n                <Input\r\n                  elementType={this.state.controls.link.elementType}\r\n                  elementConfig={this.state.controls.link.elementConfig}\r\n                  value={this.state.controls.link.value}\r\n                  changed={event => this.inputChangedHandler(event, \"link\")}\r\n                />\r\n              </div>\r\n\r\n              <hr />\r\n              <div className=\"mt-5\">\r\n                <TertiaryHeading>Source files</TertiaryHeading>\r\n                <br />\r\n                <p>Add your source files in .zip format</p>\r\n                <FileUpload file />\r\n              </div>\r\n\r\n              <hr />\r\n              <div className=\"mt-5\">\r\n                <TertiaryHeading>Tags</TertiaryHeading>\r\n                <br />\r\n                <TagGroup />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 mt-5\">\r\n              <TertiaryHeading>Choose Thumbnail</TertiaryHeading>\r\n              <br />\r\n              <div className=\"input-group mb-3\" />\r\n              <div className=\"text-center\">\r\n                <img\r\n                  src={this.state.imageUrl}\r\n                  alt=\"profile\"\r\n                  className=\"rounded img-fluid profile_img\"\r\n                />\r\n\r\n                <div className=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"inputGroupFile01\"\r\n                    aria-describedby=\"inputGroupFileAddon01\"\r\n                    onChange={this.onImageChange}\r\n                  />\r\n                  <label\r\n                    className=\"custom-file-label\"\r\n                    htmlFor=\"inputGroupFile01\"\r\n                  >\r\n                    Choose file\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <form onSubmit={event => this.submitHandler(event)}>\r\n            <div className=\"form-group mt-5\">\r\n              <Button btnType=\"Btn-primary Btn-md \">Submit</Button>\r\n            </div>\r\n          </form>\r\n          <Modal\r\n            title=\"Uploading...\"\r\n            centered\r\n            visible={this.state.visible}\r\n            footer={null}\r\n          >\r\n            <p className=\"text-center\">\r\n              <Progress\r\n                type=\"circle\"\r\n                percent={this.state.percent}\r\n                className=\"mx-auto\"\r\n              />\r\n            </p>\r\n          </Modal>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modules: state.dynamicFormItemReducer.modules,\r\n    technologies: state.dynamicFormItemReducer.technologies,\r\n    requirements: state.dynamicFormItemReducer.requirements,\r\n    tags: state.tagReducer.tags,\r\n    snapshots: state.snapShotsReducer.snapshots,\r\n    video: state.videoReducer.video,\r\n    file: state.fileReducer.file\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(PostProject);\r\n"],"sourceRoot":""}