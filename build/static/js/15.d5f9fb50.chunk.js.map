{"version":3,"sources":["components/CartItem/CartItem.js","containers/AddToCart/AddToCart.js"],"names":["cartItem","props","react_default","a","createElement","className","src","alt","title","description","substring","price","style","cursor","onClick","delete","confirm","Modal","AddToCart","state","cart","loading","totalPrice","status","deleteHandler","console","log","_this","check","showConfirm","event","id","content","onOk","project","Object","toConsumableArray","projects","projectDetail","index","indexOf","deletePrice","Math","round","splice","data","objectSpread","axios","patch","concat","userId","then","res","onCheckToCart","setState","catch","err","onCancel","onCheckout","cart_id","length","history","push","pathname","search","_this2","this","token","get","response","total","error","_this3","result","map","CartItem","key","image","Spinner","empty","Fragment","height","Button","btnType","clicked","Component","connect","authReducer","cartReducer","dispatch","softwareId","actions"],"mappings":"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","file":"static/js/15.d5f9fb50.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst cartItem = (props) => {\r\n    return (\r\n        <div className='row col-12 mx-auto border-bottom bg-white text-dark' >\r\n            <div className='col-3 col-sm-3 col-md-3 '>\r\n                <img className='img-fluid my-4' src={props.src} alt={props.src} />\r\n            </div>\r\n            <div className='col-7 mt-3 col-sm-7 col-md-7'>\r\n                <div className='col-12'>\r\n                    <h3>{props.title}</h3>\r\n                    <span>{props.description.substring(0, 40)}</span>\r\n                </div>\r\n            </div>\r\n            <div className='col-2 mt-3 col-sm-2 col-md-2 '>\r\n                <h3>\r\n                    <strong>${props.price}</strong>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <span style={{ cursor: 'pointer' }}> <i onClick={props.delete} className='fas fa-trash ml-5' ></i></span>\r\n                </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default cartItem;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport CartItem from '../../components/CartItem/CartItem';\r\nimport { Modal } from 'antd';\r\nimport { Empty } from 'antd';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst confirm = Modal.confirm;\r\n\r\nclass AddToCart extends Component {\r\n\r\n    state = {\r\n        cart: [],\r\n        loading: true,\r\n        totalPrice: 0,\r\n        status: false,\r\n    }\r\n\r\n    componentWillMount() {\r\n        //console.log(` Will Mount ${this.props.userId}`);\r\n        if (this.props.token && this.props.userId) {\r\n            axios.get(`http://127.0.0.1:8000/api/cart-details/${this.props.userId}/`)\r\n                .then(response => {\r\n                    let total = Math.round(response.data.total);\r\n                    this.setState({ cart: response.data.projects, loading: false, totalPrice: total });\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n\r\n    deleteHandler = () => {\r\n        console.log(this.state.check);\r\n    }\r\n\r\n    showConfirm = (event, id, title) => {\r\n        confirm({\r\n            title: 'Are you sure?',\r\n            content: title,\r\n            onOk: () => {\r\n                const project = [...this.props.check.projects];\r\n                const projectDetail = [...this.state.cart];\r\n                let index = project.indexOf(id);\r\n                let deletePrice = Math.round(projectDetail[index].price);\r\n                project.splice(index, 1);\r\n                projectDetail.splice(index, 1);\r\n                const data = {\r\n                    ...this.props.check,\r\n                    projects: project\r\n                }\r\n\r\n                axios.patch(`http://127.0.0.1:8000/api/cart/${this.props.userId}/`, data)\r\n                    .then(res => {\r\n                        this.props.onCheckToCart(this.props.userId, 0);\r\n                        this.setState({ status: true, cart: projectDetail, check: data, totalPrice: this.state.totalPrice - deletePrice });\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    onCheckout = () => {\r\n        const data = {\r\n            cart_id: this.props.cart_id,\r\n            cart: this.state.cart,\r\n            totalPrice: this.state.totalPrice\r\n        }\r\n\r\n        if (data.cart.length === 0) {\r\n            return;\r\n        }\r\n        else {\r\n            this.props.history.push(\r\n                {\r\n                    pathname: '/order',\r\n                    search: '',\r\n                    state: data\r\n                }\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const result = this.state.cart.map(res => {\r\n            return (\r\n                <CartItem key={res.id}\r\n                    src={res.image}\r\n                    title={res.title}\r\n                    description={res.description}\r\n                    price={res.price}\r\n                    delete={(event) => this.showConfirm(event, res.id, res.title)} />\r\n\r\n            );\r\n        })\r\n\r\n        let data = <div className='mx-auto'><Spinner /></div>\r\n        if (!this.state.loading && this.state.cart.length != 0) {\r\n            data = (\r\n                <>\r\n                    {result}\r\n\r\n                    < h1 className='ml-auto mt-4' > Total < strong > ${Math.round(this.state.totalPrice)}</strong ></h1 >\r\n                </>\r\n            );\r\n\r\n        }\r\n        else if (this.state.cart.length == 0) {\r\n            data = <Empty />\r\n        }\r\n        return (\r\n            <section className=\"container\">\r\n                <div className='container'>\r\n\r\n                    <div className='d-md-flex flex-md-row'>\r\n                        <div className='row  border d-flex col-md-7  '>\r\n                            <div className='row col-12'>\r\n                                <h1 className=''>Your cart</h1>\r\n                            </div>\r\n                            <div className='row col-12 '>\r\n                                {data}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='d-flex col-md-1 '>\r\n\r\n                        </div>\r\n                        <div className='row col-md-3 border mr-auto text-center bg-white'\r\n                            style={{ height: '20rem' }}>\r\n                            <h1 className='col-12 mt-3'>Your cart total</h1>\r\n                            <h1 className='col-12'>${Math.round(this.state.totalPrice)}</h1>\r\n                            <Button\r\n                                btnType=\"Btn-primary Btn-md btn-block mx-auto d-block\"\r\n                                clicked={this.onCheckout} >Checkout</Button>\r\n                            {this.state.cart.length === 0 ?\r\n                                <div className='col-12'>\r\n                                    <span className='text-danger'>Please add items in order to checkout</span>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.authReducer.userId,\r\n        token: state.authReducer.token,\r\n        check: state.cartReducer.check,\r\n        cart_id: state.cartReducer.check.id\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCheckToCart: (userId, softwareId) => dispatch(actions.checkToCart(userId, softwareId)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToCart);"],"sourceRoot":""}